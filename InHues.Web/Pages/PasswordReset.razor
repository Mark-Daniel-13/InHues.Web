@page "/PasswodReset"
@using InHues.Domain.DTO.V1.Identity.Request;

<PageTitle>Forgot Password</PageTitle>

<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height:100vh" class="front-page">
    <div class="rz-shadow-2 px-2">
        <div class="logo-container">
            <img src="/img/dermtrics_logo.png" class="img-host-logo">
        </div>

        @if (!EmailSent)
        {
            <p class="dt-12 text-center mb-0"><strong>Forgot Password</strong></p>
            <p class="dt-08 text-center">Enter your email address and we'll send you a link to reset your password.</p>

            <RadzenTemplateForm TItem="PasswordResetDto" Data="@Reset" Submit="ResetPass">
                <RadzenStack Class="rz-p-4 rz-p-md-4">

                 <RadzenFormField Text="Email" Variant="Variant.Outlined" Style="width: 100%;">
                    <ChildContent>
                        <RadzenTextBox Placeholder="Email" Name="email" @bind-Value="Reset.Email" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="email" Text="Enter email" Popup="true" Style="position: relative" />
                        <RadzenEmailValidator Component="email" Text="Provide a valid email address" Popup=true Style="position: relative" />
                    </Helper>
                </RadzenFormField>

                <RadzenButton Variant="Variant.Flat" IsBusy="@Submitting" class="primary-bg" ButtonType="ButtonType.Submit" Text="EMAIL ME"></RadzenButton>
            </RadzenStack>
            </RadzenTemplateForm>
        }
        else
        {

            <p class="dt-12 text-center mb-0"><strong>Please check your email</strong></p>
            <p class="dt-08 text-center">We sent you an email, which contains a link to reset your InHues password.</p>
            <div class="rz-p-4 rz-p-md-4 w-100">
                <RadzenButton Variant="Variant.Flat" IsBusy="@Submitting" class="primary-bg w-100" ButtonType="ButtonType.Button" Click="@(()=>{NavManager.NavigateTo("/");})" Text="BACK TO LOGIN"></RadzenButton>
            </div>
        }
    </div>
</RadzenStack>
@code {
    [Inject] private IBridge? _bridge { get; set; }
    [Inject] private IAuthService? _authService { get; set; }

    PasswordResetDto Reset = new();
    bool Submitting = false;
    bool EmailSent = false;
    async Task ResetPass()
    {
        if (_bridge is null || _authService is null || Submitting) return;

        Submitting = true;
        var query = await _bridge.CommandJsonAsync<string, PasswordResetDto>(ApiRoutes.Identity.ResetPassword, Reset, RequestType.POST);
        Submitting = false;

        if (!query.IsSuccess)
        {
            var error = new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = query?.Errors?.FirstOrDefault(),
                Duration = 1500
            };
            NotifService.Notify(error);
            return;
        };
       
        EmailSent = true;
    }
}